% Regression tests for isotpscanner
~ python3_only

# More information at http://www.secdev.org/projects/UTscapy/


############
############
+ Configuration of CAN virtual sockets

= Load os
~ conf command needs_root linux

import os
import threading
import time
import subprocess

from scapy.all import load_contrib, load_layer

import scapy.modules.six as six

if six.PY2:
    conf.contribs['CANSocket'] = {'use-python-can': True}
else:
    conf.contribs['ISOTP'] = {'use-can-isotp-kernel-module': True}


= Load module
~ conf command needs_root linux
load_contrib("isotp")
load_contrib("cansocket")
load_layer("can")


= Setup vcan0, vcan1
~ conf command needs_root linux

bashCommand = "/bin/bash -c 'sudo modprobe vcan; sudo ip link add name vcan0 type vcan; sudo ip link set dev vcan0 up; sudo ip link add name vcan1 type vcan; sudo ip link set dev vcan1 up;'"

0 == os.system(bashCommand)


= init sockets
~ needs_root linux
CanSocket_recv = CANSocket("vcan1")


= Test wrong usage
~ needs_root linux
result = subprocess.run(['python', '-m', 'scapy.tools.automotive.isotpscanner'], capture_output=True)
output = result.stderr
print(output)
expected_output = b'usage:'
assert expected_output in output


= Test show help
~ needs_root linux
result = subprocess.run(['python', '-m', 'scapy.tools.automotive.isotpscanner', '--help'], capture_output=True)
output = result.stdout
expected_output = b'Scan for open ISOTP-Sockets'
print(output)
assert expected_output in output


= Test wrong socket for Python2 or Windows
~ needs_root linux
result = subprocess.run(['python2', '-m', 'scapy.tools.automotive.isotpscanner', 'vcan0', '0x600', '0x600'], capture_output=True)
expected_output = b'Wrong interface'
output = result.stdout
print(output)
print(expected_output)
assert expected_output in output


= Test wrong socket for Python3 on Linux
~ needs_root linux
result = subprocess.run(['python3', '-m', 'scapy.tools.automotive.isotpscanner', '\"can.interface.Bus(bustype=\'socketcan\', channel=\'vcan0\', bitrate=250000)', '0x600', '0x600'], capture_output=True)
expected_output = b'Wrong interface'
output = result.stdout
print(output)
print(expected_output)
assert expected_output in output


= Test standard scan
~ needs_root linux

def isotpserver():
	isotpsock1 = ISOTPNativeSocket("vcan0", sid=0x700, did=0x600)
	isotpsock1.sniff(timeout=100, count=1)
	isotpsock1.close()

sniffer = threading.Thread(target=isotpserver)
sniffer.start()
time.sleep(0.1)
result = subprocess.run(['python', '-m', 'scapy.tools.automotive.isotpscanner', 'vcan0', '0x600', '0x600'], capture_output=True)
subprocess.call(['cansend', 'vcan0', '600#01aa'])
expected_output = [b'0x600', b'0x700']
output = result.stdout
print(output)
for out in expected_output:
	assert out in output

1 == 1


= Test extended scan
~ needs_root linux

def isotpserver():
	s = ISOTPNativeSocket("vcan0", sid=0x700, did=0x601, extended_addr=0xaa, extended_rx_addr=0xbb)
	s.sniff(timeout=100, count=1)
	return

sniffer = threading.Thread(target=isotpserver)
sniffer.start()
time.sleep(0.1)
result = subprocess.run(['python', '-m', 'scapy.tools.automotive.isotpscanner', 'vcan0', '0x601', '0x601', '-e'], capture_output=True)
subprocess.call(['cansend', 'vcan0', '601#BB01aa'])
expected_output = [b'0x601', b'0xbb', b'0x700', b'0xaa']
output = result.stdout
print(output)
for out in expected_output:
	assert out in output

1 == 1


= Test extended only scan
~ needs_root linux

def isotpserver():
	s = ISOTPNativeSocket("vcan0", sid=0x700, did=0x601, extended_addr=0xaa, extended_rx_addr=0xbb)
	s.sniff(timeout=100, count=1)
	return

sniffer = threading.Thread(target=isotpserver)
sniffer.start()
time.sleep(0.1)
result = subprocess.run(['python', '-m', 'scapy.tools.automotive.isotpscanner', 'vcan0', '0x601', '0x601', '-eo'], capture_output=True)
subprocess.call(['cansend', 'vcan0', '601#BB01aa'])
expected_output = [b'0x601', b'0xbb', b'0x700', b'0xaa']
output = result.stdout
print(output)
for out in expected_output:
	assert out in output

1 == 1


= Test scan with piso flag
~ needs_root linux

def isotpserver():
	s = ISOTPNativeSocket("vcan0", sid=0x700, did=0x601, extended_addr=0xaa, extended_rx_addr=0xbb)
	s.sniff(timeout=100, count=1)
	return

sniffer = threading.Thread(target=isotpserver)
sniffer.start()
time.sleep(0.1)
result = subprocess.run(['python', '-m', 'scapy.tools.automotive.isotpscanner', 'vcan0', '0x601', '0x601', '-eo', '-p'], capture_output=True)
subprocess.call(['cansend', 'vcan0', '601#BB01aa'])
expected_output = [b'sid=0x601', b'did=0x700', b'padding=False', b'extended_addr=0xbb', b'extended_rx_addr=0xaa']
output = result.stdout
print(output)
for out in expected_output:
	assert out in output

1 == 1
